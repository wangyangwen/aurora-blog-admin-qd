{"remainingRequest":"D:\\bk\\aurora-blog-admin-qd\\node_modules\\babel-loader\\lib\\index.js!D:\\bk\\aurora-blog-admin-qd\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\bk\\aurora-blog-admin-qd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\bk\\aurora-blog-admin-qd\\src\\views\\Dashboard.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\bk\\aurora-blog-admin-qd\\src\\views\\Dashboard.vue","mtime":1743693050714},{"path":"D:\\bk\\aurora-blog-admin-qd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1743694599572},{"path":"D:\\bk\\aurora-blog-admin-qd\\node_modules\\babel-loader\\lib\\index.js","mtime":1743694587149},{"path":"D:\\bk\\aurora-blog-admin-qd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1743694599572},{"path":"D:\\bk\\aurora-blog-admin-qd\\node_modules\\vue-loader\\lib\\index.js","mtime":1743694587864}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbWFwR2V0dGVycywgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRGFzaGJvYXJkJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g5qCH562+57G75Z6L5YiX6KGoCiAgICAgIHRhZ1R5cGVzOiBbJycsICdzdWNjZXNzJywgJ2luZm8nLCAnd2FybmluZycsICdkYW5nZXInXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsncG9zdHMnLCAndGFncycsICdpc0xvYWRpbmcnXSksCiAgICAvLyDmnIDov5Hmlofnq6DvvIjmnIDlpJo156+H77yJCiAgICByZWNlbnRQb3N0cygpIHsKICAgICAgcmV0dXJuIFsuLi50aGlzLnBvc3RzXS5zb3J0KChhLCBiKSA9PiBuZXcgRGF0ZShiLmNyZWF0ZWRBdCkgLSBuZXcgRGF0ZShhLmNyZWF0ZWRBdCkpLnNsaWNlKDAsIDUpOwogICAgfSwKICAgIC8vIOeyvumAieaWh+eroAogICAgZmVhdHVyZWRQb3N0cygpIHsKICAgICAgcmV0dXJuIHRoaXMucG9zdHMuZmlsdGVyKHBvc3QgPT4gcG9zdC5mZWF0dXJlZCk7CiAgICB9LAogICAgLy8g5pyA5bi455So55qE5qCH562+77yI5pyA5aSaMTDkuKrvvIkKICAgIHRvcFRhZ3MoKSB7CiAgICAgIHJldHVybiBbLi4udGhpcy50YWdzXS5zb3J0KChhLCBiKSA9PiBiLmNvdW50IC0gYS5jb3VudCkuc2xpY2UoMCwgMTApOwogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBBY3Rpb25zKFsnZmV0Y2hQb3N0cycsICdmZXRjaFRhZ3MnXSksCiAgICAvLyDliqDovb3mlbDmja4KICAgIGFzeW5jIGZldGNoRGF0YSgpIHsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChbdGhpcy5mZXRjaFBvc3RzKCksIHRoaXMuZmV0Y2hUYWdzKCldKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfliqDovb3mlbDmja7lpLHotKUnKTsKICAgICAgICBjb25zb2xlLmVycm9yKCfliqDovb3mlbDmja7lpLHotKU6JywgZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgLy8g5qC85byP5YyW5pel5pyfCiAgICBmb3JtYXREYXRlKGRhdGUpIHsKICAgICAgcmV0dXJuIG1vbWVudChkYXRlKS5mb3JtYXQoJ1lZWVktTU0tREQgSEg6bW0nKTsKICAgIH0sCiAgICAvLyDpmo/mnLrmoIfnrb7nsbvlnosKICAgIHJhbmRvbVRhZ1R5cGUoKSB7CiAgICAgIHJldHVybiB0aGlzLnRhZ1R5cGVzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMudGFnVHlwZXMubGVuZ3RoKV07CiAgICB9LAogICAgLy8g6Lez6L2s5Yiw57yW6L6R6aG16Z2iCiAgICBnb1RvRWRpdChwb3N0KSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAvcG9zdHMvZWRpdC8ke3Bvc3Quc2x1Z31gKTsKICAgIH0sCiAgICAvLyDnlJ/miJDljZrlrqIKICAgIGdlbmVyYXRlQmxvZygpIHsKICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgdHlwZTogJ2luZm8nLAogICAgICAgIG1lc3NhZ2U6ICfmraPlnKjnlJ/miJDljZrlrqLvvIzor7fnqI3lgJkuLi4nCiAgICAgIH0pOwoKICAgICAgLy8g6L+Z6YeM5Y+v5Lul6LCD55SoQVBJ5p2l6Kem5Y+R5Y2a5a6i55Sf5oiQCiAgICAgIHRoaXMuJGh0dHAucG9zdCgnL2hleG8vZ2VuZXJhdGUnKS50aGVuKCgpID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgIG1lc3NhZ2U6ICfljZrlrqLnlJ/miJDmiJDlip/vvIEnCiAgICAgICAgfSk7CiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfljZrlrqLnlJ/miJDlpLHotKUnKTsKICAgICAgICBjb25zb2xlLmVycm9yKCfljZrlrqLnlJ/miJDlpLHotKU6JywgZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmn6XnnIvljZrlrqIKICAgIHZpZXdCbG9nKCkgewogICAgICB3aW5kb3cub3BlbignaHR0cDovL2xvY2FsaG9zdDo1MDAwJywgJ19ibGFuaycpOwogICAgfQogIH0KfTs="},{"version":3,"names":["mapGetters","mapActions","moment","name","data","tagTypes","computed","recentPosts","posts","sort","a","b","Date","createdAt","slice","featuredPosts","filter","post","featured","topTags","tags","count","created","fetchData","methods","Promise","all","fetchPosts","fetchTags","error","$message","console","formatDate","date","format","randomTagType","Math","floor","random","length","goToEdit","$router","push","slug","generateBlog","type","message","$http","then","catch","viewBlog","window","open"],"sources":["src/views/Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <el-row :gutter=\"20\">\r\n      <!-- 总览卡片 -->\r\n      <el-col :span=\"8\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>文章总数</span>\r\n          </div>\r\n          <div class=\"stat-value\">\r\n            <i class=\"el-icon-document\"></i>\r\n            <span>{{ posts.length }}</span>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <el-col :span=\"8\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>标签总数</span>\r\n          </div>\r\n          <div class=\"stat-value\">\r\n            <i class=\"el-icon-collection-tag\"></i>\r\n            <span>{{ tags.length }}</span>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <el-col :span=\"8\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>精选文章</span>\r\n          </div>\r\n          <div class=\"stat-value\">\r\n            <i class=\"el-icon-star-on\"></i>\r\n            <span>{{ featuredPosts.length }}</span>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    \r\n    <el-row :gutter=\"20\" class=\"mt-20\">\r\n      <!-- 最近文章 -->\r\n      <el-col :span=\"16\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>最近文章</span>\r\n            <router-link to=\"/posts\" style=\"float: right; padding: 3px 0\">\r\n              <el-button type=\"text\" size=\"small\">查看全部</el-button>\r\n            </router-link>\r\n          </div>\r\n          \r\n          <el-table :data=\"recentPosts\" style=\"width: 100%\" v-loading=\"isLoading\">\r\n            <el-table-column prop=\"title\" label=\"标题\" min-width=\"200\">\r\n              <template slot-scope=\"scope\">\r\n                <el-link :underline=\"false\" type=\"primary\" @click=\"goToEdit(scope.row)\">\r\n                  {{ scope.row.title }}\r\n                </el-link>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\">\r\n              <template slot-scope=\"scope\">\r\n                {{ formatDate(scope.row.createdAt) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"featured\" label=\"精选\" width=\"80\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag v-if=\"scope.row.featured\" type=\"success\" size=\"small\">精选</el-tag>\r\n                <el-tag v-else type=\"info\" size=\"small\">普通</el-tag>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <!-- 常用标签 -->\r\n      <el-col :span=\"8\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>常用标签</span>\r\n            <router-link to=\"/tags\" style=\"float: right; padding: 3px 0\">\r\n              <el-button type=\"text\" size=\"small\">查看全部</el-button>\r\n            </router-link>\r\n          </div>\r\n          \r\n          <div class=\"tag-cloud\" v-loading=\"isLoading\">\r\n            <el-tag\r\n              v-for=\"tag in topTags\"\r\n              :key=\"tag._id\"\r\n              :type=\"randomTagType()\"\r\n              effect=\"light\"\r\n              class=\"tag-item\"\r\n            >\r\n              {{ tag.name }}\r\n              <span class=\"tag-count\">({{ tag.count }})</span>\r\n            </el-tag>\r\n            \r\n            <div v-if=\"topTags.length === 0\" class=\"empty-text\">\r\n              还没有标签，请先添加一些标签\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    \r\n    <!-- 快速操作 -->\r\n    <el-row :gutter=\"20\" class=\"mt-20\">\r\n      <el-col :span=\"24\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>快速操作</span>\r\n          </div>\r\n          \r\n          <div class=\"quick-actions\">\r\n            <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"$router.push('/posts/create')\">\r\n              新建文章\r\n            </el-button>\r\n            <el-button type=\"success\" icon=\"el-icon-refresh\" @click=\"generateBlog\">\r\n              生成博客\r\n            </el-button>\r\n            <el-button type=\"warning\" icon=\"el-icon-view\" @click=\"viewBlog\">\r\n              查看博客\r\n            </el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  data() {\r\n    return {\r\n      // 标签类型列表\r\n      tagTypes: ['', 'success', 'info', 'warning', 'danger']\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['posts', 'tags', 'isLoading']),\r\n    // 最近文章（最多5篇）\r\n    recentPosts() {\r\n      return [...this.posts]\r\n        .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n        .slice(0, 5)\r\n    },\r\n    // 精选文章\r\n    featuredPosts() {\r\n      return this.posts.filter(post => post.featured)\r\n    },\r\n    // 最常用的标签（最多10个）\r\n    topTags() {\r\n      return [...this.tags]\r\n        .sort((a, b) => b.count - a.count)\r\n        .slice(0, 10)\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchPosts', 'fetchTags']),\r\n    // 加载数据\r\n    async fetchData() {\r\n      try {\r\n        await Promise.all([\r\n          this.fetchPosts(),\r\n          this.fetchTags()\r\n        ])\r\n      } catch (error) {\r\n        this.$message.error('加载数据失败')\r\n        console.error('加载数据失败:', error)\r\n      }\r\n    },\r\n    // 格式化日期\r\n    formatDate(date) {\r\n      return moment(date).format('YYYY-MM-DD HH:mm')\r\n    },\r\n    // 随机标签类型\r\n    randomTagType() {\r\n      return this.tagTypes[Math.floor(Math.random() * this.tagTypes.length)]\r\n    },\r\n    // 跳转到编辑页面\r\n    goToEdit(post) {\r\n      this.$router.push(`/posts/edit/${post.slug}`)\r\n    },\r\n    // 生成博客\r\n    generateBlog() {\r\n      this.$message({\r\n        type: 'info',\r\n        message: '正在生成博客，请稍候...'\r\n      })\r\n      \r\n      // 这里可以调用API来触发博客生成\r\n      this.$http.post('/hexo/generate')\r\n        .then(() => {\r\n          this.$message({\r\n            type: 'success',\r\n            message: '博客生成成功！'\r\n          })\r\n        })\r\n        .catch(error => {\r\n          this.$message.error('博客生成失败')\r\n          console.error('博客生成失败:', error)\r\n        })\r\n    },\r\n    // 查看博客\r\n    viewBlog() {\r\n      window.open('http://localhost:5000', '_blank')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  padding: 20px 0;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 80px;\r\n}\r\n\r\n.stat-value i {\r\n  margin-right: 10px;\r\n  font-size: 28px;\r\n}\r\n\r\n.tag-cloud {\r\n  min-height: 200px;\r\n}\r\n\r\n.tag-item {\r\n  margin: 5px;\r\n}\r\n\r\n.tag-count {\r\n  font-size: 12px;\r\n  margin-left: 3px;\r\n}\r\n\r\n.quick-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  padding: 20px 0;\r\n}\r\n\r\n.empty-text {\r\n  color: #909399;\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n</style>\r\n</rewritten_file>"],"mappings":"AAmIA,SAAAA,UAAA,EAAAC,UAAA;AACA,OAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAN,UAAA;IACA;IACAO,YAAA;MACA,gBAAAC,KAAA,EACAC,IAAA,EAAAC,CAAA,EAAAC,CAAA,SAAAC,IAAA,CAAAD,CAAA,CAAAE,SAAA,QAAAD,IAAA,CAAAF,CAAA,CAAAG,SAAA,GACAC,KAAA;IACA;IACA;IACAC,cAAA;MACA,YAAAP,KAAA,CAAAQ,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,QAAA;IACA;IACA;IACAC,QAAA;MACA,gBAAAC,IAAA,EACAX,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAA,CAAA,CAAAU,KAAA,GAAAX,CAAA,CAAAW,KAAA,EACAP,KAAA;IACA;EACA;EACAQ,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACA,GAAAvB,UAAA;IACA;IACA,MAAAsB,UAAA;MACA;QACA,MAAAE,OAAA,CAAAC,GAAA,EACA,KAAAC,UAAA,IACA,KAAAC,SAAA,GACA;MACA,SAAAC,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;QACAE,OAAA,CAAAF,KAAA,YAAAA,KAAA;MACA;IACA;IACA;IACAG,WAAAC,IAAA;MACA,OAAA/B,MAAA,CAAA+B,IAAA,EAAAC,MAAA;IACA;IACA;IACAC,cAAA;MACA,YAAA9B,QAAA,CAAA+B,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,UAAAjC,QAAA,CAAAkC,MAAA;IACA;IACA;IACAC,SAAAvB,IAAA;MACA,KAAAwB,OAAA,CAAAC,IAAA,gBAAAzB,IAAA,CAAA0B,IAAA;IACA;IACA;IACAC,aAAA;MACA,KAAAd,QAAA;QACAe,IAAA;QACAC,OAAA;MACA;;MAEA;MACA,KAAAC,KAAA,CAAA9B,IAAA,mBACA+B,IAAA;QACA,KAAAlB,QAAA;UACAe,IAAA;UACAC,OAAA;QACA;MACA,GACAG,KAAA,CAAApB,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;QACAE,OAAA,CAAAF,KAAA,YAAAA,KAAA;MACA;IACA;IACA;IACAqB,SAAA;MACAC,MAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]}]}